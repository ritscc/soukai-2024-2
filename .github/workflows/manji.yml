name: Year Check for .tex files

on:
  pull_request:
    types: [opened, synchronize]
    paths: '**.tex'

jobs:
  check_year:
    runs-on: ubuntu-latest
    steps:
      # リポジトリ全体をチェックアウト
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 変更された .tex ファイル一覧を取得する
      - name: 変更された .tex ファイルの抽出
        id: changed-files
        run: |
          FILES=$(git diff ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} --diff-filter=AM --name-only -- '*.tex')
          echo "対象ファイル: $FILES"
          echo "::set-output name=files::$FILES"

      # リポジトリ名から年とバッチ番号を抽出し、変更ファイル内の4桁の数字が許容される年以外の場合はレポートを作成する
      - name: リポジトリの年チェック
        id: year-check
        shell: bash
        run: |
          # GitHub.repository は "owner/soukai-2024-1" の形式を想定
          REPO_FULL="${{ github.repository }}"
          REPO_NAME="${REPO_FULL#*/}"
          echo "リポジトリ名: $REPO_NAME"

          if [[ "$REPO_NAME" =~ ^soukai-([0-9]{4})-([12])$ ]]; then
            YEAR="${BASH_REMATCH[1]}"
            BATCH="${BASH_REMATCH[2]}"
            echo "抽出された年: $YEAR, バッチ: $BATCH"
          else
            echo "リポジトリ名が想定フォーマットと一致しません。例: soukai-<year>-<1 or 2>"
            echo "::set-output name=message::リポジトリ名の形式が正しくありません: $REPO_NAME"
            exit 0
          fi

          # バッチ番号が 1 の場合は許容される年は YEAR のみ、2 の場合は YEAR および (YEAR+1)
          if [ "$BATCH" -eq 1 ]; then
            ALLOWED_YEARS=("$YEAR")
          else
            NEXT_YEAR=$((YEAR + 1))
            ALLOWED_YEARS=("$YEAR" "$NEXT_YEAR")
          fi
          echo "許容される年: ${ALLOWED_YEARS[@]}"

          FILES="${{ steps.changed-files.outputs.files }}"
          if [ -z "$FILES" ]; then
            echo "変更された .tex ファイルはありません。"
            echo "::set-output name=message::変更された .tex ファイルはありませんでした。"
            exit 0
          fi

          ERROR=0
          REPORT=""
          for file in $FILES; do
            if [ ! -f "$file" ]; then
              echo "ファイル $file が存在しません。スキップします。"
              continue
            fi
            echo "チェック中のファイル: $file"
            # 各行の中から4桁の数字をすべて抽出してチェック
            while IFS= read -r line; do
              for num in $(echo "$line" | grep -oE '[0-9]{4}'); do
                ALLOWED=0
                for ay in "${ALLOWED_YEARS[@]}"; do
                  if [ "$num" = "$ay" ]; then
                    ALLOWED=1
                    break
                  fi
                done
                if [ $ALLOWED -eq 0 ]; then
                  REPORT+="${file}: 許容外の年 '$num' が検出されました\n"
                  ERROR=1
                fi
              done
            done < <(grep -nE '[0-9]{4}' "$file" || true)
          done

          if [ $ERROR -eq 1 ]; then
            echo -e "年チェックで問題があります:\n$REPORT"
            echo "::set-output name=message::年チェックで問題が検出されました:\n$REPORT"
          else
            echo "全ての年チェックに合格しました。"
            echo "::set-output name=message::全ての年チェックに合格しました。"
          fi

      # PR にコメントをアップサート（エラーがある場合も、単にコメントで通知する）
      - name: PRにコメントをアップサート
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: ${{ steps.year-check.outputs.message }}
